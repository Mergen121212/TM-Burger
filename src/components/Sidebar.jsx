import { useState } from "react"
import { Menu, X } from "lucide-react"

export function Sidebar({ onItemSelect, selectedItem, isDark }) {
  const [isOpen, setIsOpen] = useState(false)

  const menuItems = [
    { name: "–ù–æ–≤–∏–Ω–∫–∏", icon: "üçî", category: "–Ω–æ–≤–∏–Ω–∫–∏" },
    { name: "–ö–∏–Ω–≥ –∫–æ–º–±–æ", icon: "üçó", category: "–∫–∏–Ω–≥-–∫–æ–º–±–æ" },
    { name: "–†–æ–ª–ª—ã", icon: "üåØ", category: "—Ä–æ–ª–ª—ã" },
    { name: "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", icon: "üçü", category: "–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å" },
    { name: "–ù–∞–ø–∏—Ç–∫–∏", icon: "ü•§", category: "–Ω–∞–ø–∏—Ç–∫–∏" },
    { name: "–î–µ—Å–µ—Ä—Ç—ã", icon: "üç∞", category: "–¥–µ—Å–µ—Ä—Ç—ã" },
    { name: "–°–∞–ª–∞—Ç—ã", icon: "ü•ó", category: "—Å–∞–ª–∞—Ç—ã" },
    { name: "–ß–∞–π", icon: "üçÉ", category: "—á–∞–π" },
    { name: "–ö–æ—Ñ–µ", icon: "‚òï", category: "–∫–æ—Ñ–µ" },
    { name: "–ö–æ–∫—Ç–µ–ª–∏", icon: "üçπ", category: "–∫–æ–∫—Ç–µ–ª–∏" },
  ]

  return (
    <>
      {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é */}
      <div className="md:hidden flex justify-between items-center px-4 py-2">
        <button onClick={() => setIsOpen(!isOpen)} className="text-2xl text-orange-600">
          {isOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
        </button>
        <span className="font-bold text-lg text-gray-800 dark:text-white">–ú–µ–Ω—é</span>
      </div>

      {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
      <aside
        className={`
          ${isOpen ? "block" : "hidden"} md:block
          w-full md:w-64 md:mr-8
        `}
      >
        <div className={`rounded-lg shadow-sm p-4 transition-colors duration-300 ${isDark ? "bg-gray-800" : "bg-white"}`}>
          {menuItems.map((item, index) => (
            <button
              key={index}
              onClick={() => {
                onItemSelect(item.category)
                setIsOpen(false) // –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –Ω–∞ –º–æ–±–∏–ª–∫–µ
              }}
              className={`w-full flex items-center space-x-3 p-3 rounded-lg text-left transition-colors ${
                selectedItem === item.category
                  ? isDark
                    ? "bg-orange-900 text-orange-400"
                    : "bg-orange-50 text-orange-600"
                  : isDark
                    ? "text-gray-300 hover:text-white hover:bg-gray-700"
                    : "text-gray-700 hover:bg-gray-50"
              }`}
            >
              <span className="text-xl">{item.icon}</span>
              <span className="font-medium">{item.name}</span>
            </button>
          ))}
        </div>
      </aside>
    </>
  )
}
